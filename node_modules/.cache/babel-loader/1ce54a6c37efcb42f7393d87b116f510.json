{"ast":null,"code":"import _defineProperty from \"/Users/carolineliu/Documents/SkillFindr/skillFindr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/carolineliu/Documents/SkillFindr/skillFindr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/carolineliu/Documents/SkillFindr/skillFindr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _possibleConstructorReturn from \"/Users/carolineliu/Documents/SkillFindr/skillFindr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/carolineliu/Documents/SkillFindr/skillFindr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/carolineliu/Documents/SkillFindr/skillFindr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/Users/carolineliu/Documents/SkillFindr/skillFindr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/carolineliu/Documents/SkillFindr/skillFindr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport React, { useContext } from 'react';\nimport { defineCustomElements } from '@ionic/core/loader';\nimport { addIcons } from 'ionicons';\nimport { close, reorder, menu, arrowForward, arrowBack, arrowDown, search, closeCircle } from 'ionicons/icons';\nimport { isPlatform as isPlatform$1, getPlatforms as getPlatforms$1, alertController, loadingController, toastController, pickerController, actionSheetController, modalController, popoverController } from '@ionic/core';\nexport { setupConfig } from '@ionic/core';\nimport { __rest } from 'tslib';\nimport ReactDom from 'react-dom';\nvar IonLifeCycleContext =\n/*@__PURE__*/\nReact.createContext({\n  onIonViewWillEnter: function onIonViewWillEnter() {\n    return;\n  },\n  ionViewWillEnter: function ionViewWillEnter() {\n    return;\n  },\n  onIonViewDidEnter: function onIonViewDidEnter() {\n    return;\n  },\n  ionViewDidEnter: function ionViewDidEnter() {\n    return;\n  },\n  onIonViewWillLeave: function onIonViewWillLeave() {\n    return;\n  },\n  ionViewWillLeave: function ionViewWillLeave() {\n    return;\n  },\n  onIonViewDidLeave: function onIonViewDidLeave() {\n    return;\n  },\n  ionViewDidLeave: function ionViewDidLeave() {\n    return;\n  }\n});\n\nvar DefaultIonLifeCycleContext =\n/*#__PURE__*/\nfunction () {\n  function DefaultIonLifeCycleContext() {\n    _classCallCheck(this, DefaultIonLifeCycleContext);\n  }\n\n  _createClass(DefaultIonLifeCycleContext, [{\n    key: \"onIonViewWillEnter\",\n    value: function onIonViewWillEnter(callback) {\n      this.ionViewWillEnterCallback = callback;\n    }\n  }, {\n    key: \"ionViewWillEnter\",\n    value: function ionViewWillEnter() {\n      if (this.ionViewWillEnterCallback) {\n        this.ionViewWillEnterCallback();\n      }\n    }\n  }, {\n    key: \"onIonViewDidEnter\",\n    value: function onIonViewDidEnter(callback) {\n      this.ionViewDidEnterCallback = callback;\n    }\n  }, {\n    key: \"ionViewDidEnter\",\n    value: function ionViewDidEnter() {\n      if (this.ionViewDidEnterCallback) {\n        this.ionViewDidEnterCallback();\n      }\n    }\n  }, {\n    key: \"onIonViewWillLeave\",\n    value: function onIonViewWillLeave(callback) {\n      this.ionViewWillLeaveCallback = callback;\n    }\n  }, {\n    key: \"ionViewWillLeave\",\n    value: function ionViewWillLeave() {\n      if (this.ionViewWillLeaveCallback) {\n        this.ionViewWillLeaveCallback();\n      }\n    }\n  }, {\n    key: \"onIonViewDidLeave\",\n    value: function onIonViewDidLeave(callback) {\n      this.ionViewDidLeaveCallback = callback;\n    }\n  }, {\n    key: \"ionViewDidLeave\",\n    value: function ionViewDidLeave() {\n      if (this.ionViewDidLeaveCallback) {\n        this.ionViewDidLeaveCallback();\n      }\n\n      this.componentCanBeDestroyed();\n    }\n  }, {\n    key: \"onComponentCanBeDestroyed\",\n    value: function onComponentCanBeDestroyed(callback) {\n      this.componentCanBeDestroyedCallback = callback;\n    }\n  }, {\n    key: \"componentCanBeDestroyed\",\n    value: function componentCanBeDestroyed() {\n      if (this.componentCanBeDestroyedCallback) {\n        this.componentCanBeDestroyedCallback();\n      }\n    }\n  }]);\n\n  return DefaultIonLifeCycleContext;\n}();\n\nvar withIonLifeCycle = function withIonLifeCycle(WrappedComponent) {\n  return (\n    /*#__PURE__*/\n    function (_React$Component) {\n      _inherits(IonLifeCycle, _React$Component);\n\n      function IonLifeCycle(props) {\n        var _this;\n\n        _classCallCheck(this, IonLifeCycle);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(IonLifeCycle).call(this, props));\n        _this.componentRef = React.createRef();\n        return _this;\n      }\n\n      _createClass(IonLifeCycle, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var element = this.componentRef.current;\n          this.context.onIonViewWillEnter(function () {\n            if (element && element.ionViewWillEnter) {\n              element.ionViewWillEnter();\n            }\n          });\n          this.context.onIonViewDidEnter(function () {\n            if (element && element.ionViewDidEnter) {\n              element.ionViewDidEnter();\n            }\n          });\n          this.context.onIonViewWillLeave(function () {\n            if (element && element.ionViewWillLeave) {\n              element.ionViewWillLeave();\n            }\n          });\n          this.context.onIonViewDidLeave(function () {\n            if (element && element.ionViewDidLeave) {\n              element.ionViewDidLeave();\n            }\n          });\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this2 = this;\n\n          return React.createElement(IonLifeCycleContext.Consumer, null, function (context) {\n            _this2.context = context;\n            return React.createElement(WrappedComponent, Object.assign({\n              ref: _this2.componentRef\n            }, _this2.props));\n          });\n        }\n      }]);\n\n      return IonLifeCycle;\n    }(React.Component)\n  );\n};\n\nvar useIonViewWillEnter = function useIonViewWillEnter(callback) {\n  var value = useContext(IonLifeCycleContext);\n  value.onIonViewWillEnter(callback);\n};\n\nvar useIonViewDidEnter = function useIonViewDidEnter(callback) {\n  var value = useContext(IonLifeCycleContext);\n  value.onIonViewDidEnter(callback);\n};\n\nvar useIonViewWillLeave = function useIonViewWillLeave(callback) {\n  var value = useContext(IonLifeCycleContext);\n  value.onIonViewWillLeave(callback);\n};\n\nvar useIonViewDidLeave = function useIonViewDidLeave(callback) {\n  var value = useContext(IonLifeCycleContext);\n  value.onIonViewDidLeave(callback);\n};\n\nvar NavContext =\n/*@__PURE__*/\nReact.createContext({\n  getPageManager: function getPageManager() {\n    return undefined;\n  },\n  getStackManager: function getStackManager() {\n    return undefined;\n  },\n  goBack: function goBack(defaultHref) {\n    if (defaultHref !== undefined) {\n      window.location.pathname = defaultHref;\n    } else {\n      window.history.back();\n    }\n  },\n  navigate: function navigate(path) {\n    window.location.pathname = path;\n  },\n  tabNavigate: function tabNavigate() {\n    return undefined;\n  },\n  hasIonicRouter: function hasIonicRouter() {\n    return false;\n  },\n  registerIonPage: function registerIonPage() {\n    return undefined;\n  },\n  currentPath: undefined\n});\n\nvar dashToPascalCase = function dashToPascalCase(str) {\n  return str.toLowerCase().split('-').map(function (segment) {\n    return segment.charAt(0).toUpperCase() + segment.slice(1);\n  }).join('');\n};\n\nvar camelToDashCase = function camelToDashCase(str) {\n  return str.replace(/([A-Z])/g, function (m) {\n    return \"-\".concat(m[0].toLowerCase());\n  });\n};\n\nvar attachProps = function attachProps(node, newProps) {\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  // add any classes in className to the class list\n  var className = getClassName(node.classList, newProps, oldProps);\n\n  if (className !== '') {\n    node.className = className;\n  }\n\n  Object.keys(newProps).forEach(function (name) {\n    if (name === 'children' || name === 'style' || name === 'ref' || name === 'class' || name === 'className' || name === 'forwardedRef') {\n      return;\n    }\n\n    if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {\n      var eventName = name.substring(2);\n      var eventNameLc = eventName[0].toLowerCase() + eventName.substring(1);\n\n      if (!isCoveredByReact(eventNameLc)) {\n        syncEvent(node, eventNameLc, newProps[name]);\n      }\n    } else {\n      node[name] = newProps[name];\n      var propType = typeof newProps[name];\n\n      if (propType === 'string') {\n        node.setAttribute(camelToDashCase(name), newProps[name]);\n      } else {\n        node[name] = newProps[name];\n      }\n    }\n  });\n};\n\nvar getClassName = function getClassName(classList, newProps, oldProps) {\n  var newClassProp = newProps.className || newProps.class;\n  var oldClassProp = oldProps.className || oldProps.class; // map the classes to Maps for performance\n\n  var currentClasses = arrayToMap(classList);\n  var incomingPropClasses = arrayToMap(newClassProp ? newClassProp.split(' ') : []);\n  var oldPropClasses = arrayToMap(oldClassProp ? oldClassProp.split(' ') : []);\n  var finalClassNames = []; // loop through each of the current classes on the component\n  // to see if it should be a part of the classNames added\n\n  currentClasses.forEach(function (currentClass) {\n    if (incomingPropClasses.has(currentClass)) {\n      // add it as its already included in classnames coming in from newProps\n      finalClassNames.push(currentClass);\n      incomingPropClasses.delete(currentClass);\n    } else if (!oldPropClasses.has(currentClass)) {\n      // add it as it has NOT been removed by user\n      finalClassNames.push(currentClass);\n    }\n  });\n  incomingPropClasses.forEach(function (s) {\n    return finalClassNames.push(s);\n  });\n  return finalClassNames.join(' ');\n};\n/**\n * Checks if an event is supported in the current execution environment.\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\n\n\nvar isCoveredByReact = function isCoveredByReact(eventNameSuffix) {\n  var doc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document;\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in doc;\n\n  if (!isSupported) {\n    var element = doc.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  return isSupported;\n};\n\nvar syncEvent = function syncEvent(node, eventName, newEventHandler) {\n  var eventStore = node.__events || (node.__events = {});\n  var oldEventHandler = eventStore[eventName]; // Remove old listener so they don't double up.\n\n  if (oldEventHandler) {\n    node.removeEventListener(eventName, oldEventHandler);\n  } // Bind new listener.\n\n\n  node.addEventListener(eventName, eventStore[eventName] = function handler(e) {\n    if (newEventHandler) {\n      newEventHandler.call(this, e);\n    }\n  });\n};\n\nvar arrayToMap = function arrayToMap(arr) {\n  var map = new Map();\n  arr.forEach(function (s) {\n    return map.set(s, s);\n  });\n  return map;\n};\n\nvar createForwardRef = function createForwardRef(ReactComponent, displayName) {\n  var forwardRef = function forwardRef(props, ref) {\n    return React.createElement(ReactComponent, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n  };\n\n  forwardRef.displayName = displayName;\n  return React.forwardRef(forwardRef);\n};\n\nvar isPlatform = function isPlatform(platform) {\n  return isPlatform$1(window, platform);\n};\n\nvar getPlatforms = function getPlatforms() {\n  return getPlatforms$1(window);\n};\n\nvar createReactComponent = function createReactComponent(tagName) {\n  var routerLinkComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var displayName = dashToPascalCase(tagName);\n\n  var ReactComponent =\n  /*#__PURE__*/\n  function (_React$Component2) {\n    _inherits(ReactComponent, _React$Component2);\n\n    function ReactComponent(props) {\n      var _this3;\n\n      _classCallCheck(this, ReactComponent);\n\n      _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ReactComponent).call(this, props));\n\n      _this3.handleClick = function (e) {\n        var _this3$props = _this3.props,\n            routerLink = _this3$props.routerLink,\n            routerDirection = _this3$props.routerDirection;\n\n        if (routerLink !== undefined) {\n          e.preventDefault();\n\n          _this3.context.navigate(routerLink, routerDirection);\n        }\n      };\n\n      return _this3;\n    }\n\n    _createClass(ReactComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.componentDidUpdate(this.props);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var node = ReactDom.findDOMNode(this);\n        attachProps(node, this.props, prevProps);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this4 = this;\n\n        var _a = this.props,\n            children = _a.children,\n            forwardedRef = _a.forwardedRef,\n            style = _a.style,\n            className = _a.className,\n            ref = _a.ref,\n            cProps = __rest(_a, [\"children\", \"forwardedRef\", \"style\", \"className\", \"ref\"]);\n\n        var propsToPass = Object.keys(cProps).reduce(function (acc, name) {\n          if (name.indexOf('on') === 0 && name[2] === name[2].toUpperCase()) {\n            var eventName = name.substring(2).toLowerCase();\n\n            if (isCoveredByReact(eventName)) {\n              acc[name] = cProps[name];\n            }\n          }\n\n          return acc;\n        }, {});\n        var newProps = Object.assign({}, propsToPass, {\n          ref: forwardedRef,\n          style: style\n        });\n\n        if (routerLinkComponent) {\n          if (this.props.routerLink && !this.props.href) {\n            newProps.href = this.props.routerLink;\n          }\n\n          if (newProps.onClick) {\n            var oldClick = newProps.onClick;\n\n            newProps.onClick = function (e) {\n              oldClick(e);\n\n              if (!e.defaultPrevented) {\n                _this4.handleClick(e);\n              }\n            };\n          } else {\n            newProps.onClick = this.handleClick;\n          }\n        }\n\n        return React.createElement(tagName, newProps, children);\n      }\n    }], [{\n      key: \"displayName\",\n      get: function get() {\n        return displayName;\n      }\n    }, {\n      key: \"contextType\",\n      get: function get() {\n        return NavContext;\n      }\n    }]);\n\n    return ReactComponent;\n  }(React.Component);\n\n  return createForwardRef(ReactComponent, displayName);\n}; // ionicons\n\n\nvar IonIcon =\n/*@__PURE__*/\ncreateReactComponent('ion-icon'); // ionic/core\n\nvar IonApp =\n/*@__PURE__*/\ncreateReactComponent('ion-app');\nvar IonTab =\n/*@__PURE__*/\ncreateReactComponent('ion-tab');\nvar IonTabButton =\n/*@__PURE__*/\ncreateReactComponent('ion-tab-button');\nvar IonRouterLink =\n/*@__PURE__*/\ncreateReactComponent('ion-router-link', true);\nvar IonAvatar =\n/*@__PURE__*/\ncreateReactComponent('ion-avatar');\nvar IonBackdrop =\n/*@__PURE__*/\ncreateReactComponent('ion-backdrop');\nvar IonBadge =\n/*@__PURE__*/\ncreateReactComponent('ion-badge');\nvar IonButton =\n/*@__PURE__*/\ncreateReactComponent('ion-button', true);\nvar IonButtons =\n/*@__PURE__*/\ncreateReactComponent('ion-buttons');\nvar IonCard =\n/*@__PURE__*/\ncreateReactComponent('ion-card', true);\nvar IonCardContent =\n/*@__PURE__*/\ncreateReactComponent('ion-card-content');\nvar IonCardHeader =\n/*@__PURE__*/\ncreateReactComponent('ion-card-header');\nvar IonCardSubtitle =\n/*@__PURE__*/\ncreateReactComponent('ion-card-subtitle');\nvar IonCardTitle =\n/*@__PURE__*/\ncreateReactComponent('ion-card-title');\nvar IonCheckbox =\n/*@__PURE__*/\ncreateReactComponent('ion-checkbox');\nvar IonCol =\n/*@__PURE__*/\ncreateReactComponent('ion-col');\nvar IonContent =\n/*@__PURE__*/\ncreateReactComponent('ion-content');\nvar IonChip =\n/*@__PURE__*/\ncreateReactComponent('ion-chip');\nvar IonDatetime =\n/*@__PURE__*/\ncreateReactComponent('ion-datetime');\nvar IonFab =\n/*@__PURE__*/\ncreateReactComponent('ion-fab');\nvar IonFabButton =\n/*@__PURE__*/\ncreateReactComponent('ion-fab-button', true);\nvar IonFabList =\n/*@__PURE__*/\ncreateReactComponent('ion-fab-list');\nvar IonFooter =\n/*@__PURE__*/\ncreateReactComponent('ion-footer');\nvar IonGrid =\n/*@__PURE__*/\ncreateReactComponent('ion-grid');\nvar IonHeader =\n/*@__PURE__*/\ncreateReactComponent('ion-header');\nvar IonImg =\n/*@__PURE__*/\ncreateReactComponent('ion-img');\nvar IonInfiniteScroll =\n/*@__PURE__*/\ncreateReactComponent('ion-infinite-scroll');\nvar IonInfiniteScrollContent =\n/*@__PURE__*/\ncreateReactComponent('ion-infinite-scroll-content');\nvar IonInput =\n/*@__PURE__*/\ncreateReactComponent('ion-input');\nvar IonItem =\n/*@__PURE__*/\ncreateReactComponent('ion-item', true);\nvar IonItemDivider =\n/*@__PURE__*/\ncreateReactComponent('ion-item-divider');\nvar IonItemGroup =\n/*@__PURE__*/\ncreateReactComponent('ion-item-group');\nvar IonItemOption =\n/*@__PURE__*/\ncreateReactComponent('ion-item-option', true);\nvar IonItemOptions =\n/*@__PURE__*/\ncreateReactComponent('ion-item-options');\nvar IonItemSliding =\n/*@__PURE__*/\ncreateReactComponent('ion-item-sliding');\nvar IonLabel =\n/*@__PURE__*/\ncreateReactComponent('ion-label');\nvar IonList =\n/*@__PURE__*/\ncreateReactComponent('ion-list');\nvar IonListHeader =\n/*@__PURE__*/\ncreateReactComponent('ion-list-header');\nvar IonMenu =\n/*@__PURE__*/\ncreateReactComponent('ion-menu');\nvar IonMenuButton =\n/*@__PURE__*/\ncreateReactComponent('ion-menu-button');\nvar IonMenuToggle =\n/*@__PURE__*/\ncreateReactComponent('ion-menu-toggle');\nvar IonNote =\n/*@__PURE__*/\ncreateReactComponent('ion-note');\nvar IonPickerColumn =\n/*@__PURE__*/\ncreateReactComponent('ion-picker-column');\nvar IonNav =\n/*@__PURE__*/\ncreateReactComponent('ion-nav');\nvar IonProgressBar =\n/*@__PURE__*/\ncreateReactComponent('ion-progress-bar');\nvar IonRadio =\n/*@__PURE__*/\ncreateReactComponent('ion-radio');\nvar IonRadioGroup =\n/*@__PURE__*/\ncreateReactComponent('ion-radio-group');\nvar IonRange =\n/*@__PURE__*/\ncreateReactComponent('ion-range');\nvar IonRefresher =\n/*@__PURE__*/\ncreateReactComponent('ion-refresher');\nvar IonRefresherContent =\n/*@__PURE__*/\ncreateReactComponent('ion-refresher-content');\nvar IonReorder =\n/*@__PURE__*/\ncreateReactComponent('ion-reorder');\nvar IonReorderGroup =\n/*@__PURE__*/\ncreateReactComponent('ion-reorder-group');\nvar IonRippleEffect =\n/*@__PURE__*/\ncreateReactComponent('ion-ripple-effect');\nvar IonRow =\n/*@__PURE__*/\ncreateReactComponent('ion-row');\nvar IonSearchbar =\n/*@__PURE__*/\ncreateReactComponent('ion-searchbar');\nvar IonSegment =\n/*@__PURE__*/\ncreateReactComponent('ion-segment');\nvar IonSegmentButton =\n/*@__PURE__*/\ncreateReactComponent('ion-segment-button');\nvar IonSelect =\n/*@__PURE__*/\ncreateReactComponent('ion-select');\nvar IonSelectOption =\n/*@__PURE__*/\ncreateReactComponent('ion-select-option');\nvar IonSelectPopover =\n/*@__PURE__*/\ncreateReactComponent('ion-select-popover');\nvar IonSkeletonText =\n/*@__PURE__*/\ncreateReactComponent('ion-skeleton-text');\nvar IonSlide =\n/*@__PURE__*/\ncreateReactComponent('ion-slide');\nvar IonSlides =\n/*@__PURE__*/\ncreateReactComponent('ion-slides');\nvar IonSpinner =\n/*@__PURE__*/\ncreateReactComponent('ion-spinner');\nvar IonSplitPane =\n/*@__PURE__*/\ncreateReactComponent('ion-split-pane');\nvar IonText =\n/*@__PURE__*/\ncreateReactComponent('ion-text');\nvar IonTextarea =\n/*@__PURE__*/\ncreateReactComponent('ion-textarea');\nvar IonThumbnail =\n/*@__PURE__*/\ncreateReactComponent('ion-thumbnail');\nvar IonTitle =\n/*@__PURE__*/\ncreateReactComponent('ion-title');\nvar IonToggle =\n/*@__PURE__*/\ncreateReactComponent('ion-toggle');\nvar IonToolbar =\n/*@__PURE__*/\ncreateReactComponent('ion-toolbar');\nvar IonVirtualScroll =\n/*@__PURE__*/\ncreateReactComponent('ion-virtual-scroll');\n\nvar createControllerComponent = function createControllerComponent(displayName, controller) {\n  var dismissEventName = \"on\".concat(displayName, \"DidDismiss\");\n  return (\n    /*#__PURE__*/\n    function (_React$Component3) {\n      _inherits(_class, _React$Component3);\n\n      function _class(props) {\n        _classCallCheck(this, _class);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));\n      }\n\n      _createClass(_class, [{\n        key: \"componentDidMount\",\n        value: function () {\n          var _componentDidMount = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee() {\n            var isOpen;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    isOpen = this.props.isOpen;\n\n                    if (isOpen) {\n                      this.present();\n                    }\n\n                  case 2:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this);\n          }));\n\n          function componentDidMount() {\n            return _componentDidMount.apply(this, arguments);\n          }\n\n          return componentDidMount;\n        }()\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this.overlay) {\n            this.overlay.dismiss();\n          }\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function () {\n          var _componentDidUpdate = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee2(prevProps) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (prevProps.isOpen !== this.props.isOpen && this.props.isOpen === true) {\n                      this.present(prevProps);\n                    }\n\n                    if (!(this.overlay && prevProps.isOpen !== this.props.isOpen && this.props.isOpen === false)) {\n                      _context2.next = 4;\n                      break;\n                    }\n\n                    _context2.next = 4;\n                    return this.overlay.dismiss();\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n\n          function componentDidUpdate(_x) {\n            return _componentDidUpdate.apply(this, arguments);\n          }\n\n          return componentDidUpdate;\n        }()\n      }, {\n        key: \"present\",\n        value: function () {\n          var _present = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee3(prevProps) {\n            var _a, isOpen, onDidDismiss, cProps, overlay;\n\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _a = this.props, isOpen = _a.isOpen, onDidDismiss = _a.onDidDismiss, cProps = __rest(_a, [\"isOpen\", \"onDidDismiss\"]);\n                    _context3.next = 3;\n                    return controller.create(Object.assign({}, cProps));\n\n                  case 3:\n                    overlay = this.overlay = _context3.sent;\n                    attachProps(overlay, _defineProperty({}, dismissEventName, onDidDismiss), prevProps);\n                    _context3.next = 7;\n                    return overlay.present();\n\n                  case 7:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, _callee3, this);\n          }));\n\n          function present(_x2) {\n            return _present.apply(this, arguments);\n          }\n\n          return present;\n        }()\n      }, {\n        key: \"render\",\n        value: function render() {\n          return null;\n        }\n      }], [{\n        key: \"displayName\",\n        get: function get() {\n          return displayName;\n        }\n      }]);\n\n      return _class;\n    }(React.Component)\n  );\n};\n\nvar IonAlert =\n/*@__PURE__*/\ncreateControllerComponent('IonAlert', alertController);\nvar IonLoading =\n/*@__PURE__*/\ncreateControllerComponent('IonLoading', loadingController);\nvar IonToast =\n/*@__PURE__*/\ncreateControllerComponent('IonToast', toastController);\nvar IonPicker =\n/*@__PURE__*/\ncreateControllerComponent('IonPicker', pickerController);\n\nvar createOverlayComponent = function createOverlayComponent(displayName, controller) {\n  var dismissEventName = \"on\".concat(displayName, \"DidDismiss\");\n  return (\n    /*#__PURE__*/\n    function (_React$Component4) {\n      _inherits(_class2, _React$Component4);\n\n      function _class2(props) {\n        var _this5;\n\n        _classCallCheck(this, _class2);\n\n        _this5 = _possibleConstructorReturn(this, _getPrototypeOf(_class2).call(this, props));\n        _this5.el = document.createElement('div');\n        return _this5;\n      }\n\n      _createClass(_class2, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          if (this.props.isOpen) {\n            this.present();\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this.overlay) {\n            this.overlay.dismiss();\n          }\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function () {\n          var _componentDidUpdate2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee4(prevProps) {\n            return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (prevProps.isOpen !== this.props.isOpen && this.props.isOpen === true) {\n                      this.present(prevProps);\n                    }\n\n                    if (!(this.overlay && prevProps.isOpen !== this.props.isOpen && this.props.isOpen === false)) {\n                      _context4.next = 4;\n                      break;\n                    }\n\n                    _context4.next = 4;\n                    return this.overlay.dismiss();\n\n                  case 4:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, _callee4, this);\n          }));\n\n          function componentDidUpdate(_x3) {\n            return _componentDidUpdate2.apply(this, arguments);\n          }\n\n          return componentDidUpdate;\n        }()\n      }, {\n        key: \"present\",\n        value: function () {\n          var _present2 = _asyncToGenerator(\n          /*#__PURE__*/\n          _regeneratorRuntime.mark(function _callee5(prevProps) {\n            var _a, children, isOpen, _a$onDidDismiss, onDidDismiss, cProps, elementProps, overlay;\n\n            return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _a = this.props, children = _a.children, isOpen = _a.isOpen, _a$onDidDismiss = _a.onDidDismiss, onDidDismiss = _a$onDidDismiss === void 0 ? function () {\n                      return;\n                    } : _a$onDidDismiss, cProps = __rest(_a, [\"children\", \"isOpen\", \"onDidDismiss\"]);\n                    elementProps = Object.assign({}, cProps, _defineProperty({}, dismissEventName, onDidDismiss));\n                    _context5.next = 4;\n                    return controller.create(Object.assign({}, elementProps, {\n                      component: this.el,\n                      componentProps: {}\n                    }));\n\n                  case 4:\n                    overlay = this.overlay = _context5.sent;\n                    attachProps(overlay, elementProps, prevProps);\n                    _context5.next = 8;\n                    return overlay.present();\n\n                  case 8:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5, this);\n          }));\n\n          function present(_x4) {\n            return _present2.apply(this, arguments);\n          }\n\n          return present;\n        }()\n      }, {\n        key: \"render\",\n        value: function render() {\n          return ReactDom.createPortal(this.props.children, this.el);\n        }\n      }], [{\n        key: \"displayName\",\n        get: function get() {\n          return displayName;\n        }\n      }]);\n\n      return _class2;\n    }(React.Component)\n  );\n};\n\nvar IonActionSheet =\n/*@__PURE__*/\ncreateOverlayComponent('IonActionSheet', actionSheetController);\nvar IonModal =\n/*@__PURE__*/\ncreateOverlayComponent('IonModal', modalController);\nvar IonPopover =\n/*@__PURE__*/\ncreateOverlayComponent('IonPopover', popoverController);\n\nvar IonPage =\n/*@__PURE__*/\nfunction () {\n  return (\n    /*#__PURE__*/\n    function (_React$Component5) {\n      _inherits(IonPageInternal, _React$Component5);\n\n      function IonPageInternal() {\n        var _this6;\n\n        _classCallCheck(this, IonPageInternal);\n\n        _this6 = _possibleConstructorReturn(this, _getPrototypeOf(IonPageInternal).apply(this, arguments));\n        _this6.ref = React.createRef();\n        return _this6;\n      }\n\n      _createClass(IonPageInternal, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          if (this.context && this.ref.current) {\n            if (this.context.hasIonicRouter()) {\n              this.context.registerIonPage(this.ref.current);\n            }\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _a = this.props,\n              className = _a.className,\n              children = _a.children,\n              props = __rest(_a, [\"className\", \"children\"]);\n\n          return React.createElement(\"div\", Object.assign({\n            className: className ? \"ion-page \".concat(className) : 'ion-page',\n            ref: this.ref\n          }, props), children);\n        }\n      }], [{\n        key: \"displayName\",\n        get: function get() {\n          return 'IonPage';\n        }\n      }, {\n        key: \"contextType\",\n        get: function get() {\n          return NavContext;\n        }\n      }]);\n\n      return IonPageInternal;\n    }(React.Component)\n  );\n}();\n\nvar IonTabBarInner =\n/*@__PURE__*/\ncreateReactComponent('ion-tab-bar');\nvar IonBackButtonInner =\n/*@__PURE__*/\ncreateReactComponent('ion-back-button');\nvar IonRouterOutletInner =\n/*@__PURE__*/\ncreateReactComponent('ion-router-outlet');\n\nvar IonRouterOutletContainer =\n/*@__PURE__*/\nfunction () {\n  return (\n    /*#__PURE__*/\n    function (_React$Component6) {\n      _inherits(_class3, _React$Component6);\n\n      function _class3() {\n        _classCallCheck(this, _class3);\n\n        return _possibleConstructorReturn(this, _getPrototypeOf(_class3).apply(this, arguments));\n      }\n\n      _createClass(_class3, [{\n        key: \"render\",\n        value: function render() {\n          var StackManager = this.context.getStackManager();\n          return this.context.hasIonicRouter() ? React.createElement(StackManager, null, React.createElement(IonRouterOutletInner, Object.assign({\n            ref: this.props.forwardedRef\n          }, this.props), this.props.children)) : React.createElement(IonRouterOutletInner, Object.assign({\n            ref: this.props.forwardedRef\n          }, this.props), this.props.children);\n        }\n      }], [{\n        key: \"contextType\",\n        get: function get() {\n          return NavContext;\n        }\n      }]);\n\n      return _class3;\n    }(React.Component)\n  );\n}();\n\nvar IonRouterOutlet = createForwardRef(IonRouterOutletContainer, 'IonRouterOutlet');\n\nvar IonTabBarUnwrapped =\n/*@__PURE__*/\nfunction () {\n  return (\n    /*#__PURE__*/\n    function (_React$Component7) {\n      _inherits(_class4, _React$Component7);\n\n      function _class4(props) {\n        var _this7;\n\n        _classCallCheck(this, _class4);\n\n        _this7 = _possibleConstructorReturn(this, _getPrototypeOf(_class4).call(this, props));\n\n        _this7.onTabButtonClick = function (e) {\n          if (_this7.state.activeTab === e.detail.tab) {\n            var originalHref = _this7.state.tabs[e.detail.tab].originalHref;\n\n            if (_this7.context.hasIonicRouter()) {\n              _this7.context.tabNavigate(originalHref);\n            } else {\n              _this7.context.navigate(originalHref, 'back');\n            }\n          } else {\n            if (_this7.props.onIonTabsWillChange) {\n              _this7.props.onIonTabsWillChange(new CustomEvent('ionTabWillChange', {\n                detail: {\n                  tab: e.detail.tab\n                }\n              }));\n            }\n\n            if (_this7.props.onIonTabsDidChange) {\n              _this7.props.onIonTabsDidChange(new CustomEvent('ionTabDidChange', {\n                detail: {\n                  tab: e.detail.tab\n                }\n              }));\n            }\n\n            _this7.context.navigate(_this7.state.tabs[e.detail.tab].currentHref, 'none');\n          }\n        };\n\n        _this7.renderChild = function (activeTab) {\n          return function (child) {\n            if (child != null && child.props && child.type === IonTabButton) {\n              var href = child.props.tab === activeTab ? _this7.props.currentPath : _this7.state.tabs[child.props.tab].currentHref;\n              return React.cloneElement(child, {\n                href: href,\n                onIonTabButtonClick: _this7.onTabButtonClick\n              });\n            }\n\n            return null;\n          };\n        };\n\n        var tabActiveUrls = {};\n        React.Children.forEach(_this7.props.children, function (child) {\n          if (child != null && typeof child === 'object' && child.props && child.type === IonTabButton) {\n            tabActiveUrls[child.props.tab] = {\n              originalHref: child.props.href,\n              currentHref: child.props.href\n            };\n          }\n        });\n        _this7.state = {\n          activeTab: undefined,\n          tabs: tabActiveUrls\n        };\n        return _this7;\n      }\n\n      _createClass(_class4, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(IonTabBarInner, Object.assign({}, this.props, {\n            selectedTab: this.state.activeTab\n          }), React.Children.map(this.props.children, this.renderChild(this.state.activeTab)));\n        }\n      }], [{\n        key: \"getDerivedStateFromProps\",\n        value: function getDerivedStateFromProps(props, state) {\n          var activeTab = Object.keys(state.tabs).find(function (key) {\n            var href = state.tabs[key].originalHref;\n            return props.currentPath.startsWith(href);\n          });\n\n          if (activeTab === undefined || activeTab === state.activeTab && state.tabs[activeTab].currentHref === props.currentPath) {\n            return null;\n          }\n\n          return {\n            activeTab: activeTab,\n            tabs: Object.assign({}, state.tabs, _defineProperty({}, activeTab, {\n              originalHref: state.tabs[activeTab].originalHref,\n              currentHref: props.currentPath\n            }))\n          };\n        }\n      }, {\n        key: \"contextType\",\n        get: function get() {\n          return NavContext;\n        }\n      }]);\n\n      return _class4;\n    }(React.Component)\n  );\n}();\n\nvar IonTabBar = function IonTabBar(props) {\n  var context = useContext(NavContext);\n  return React.createElement(IonTabBarUnwrapped, Object.assign({}, props, {\n    currentPath: props.currentPath || context.currentPath\n  }), props.children);\n};\n\nvar hostStyles = {\n  display: 'flex',\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  right: '0',\n  bottom: '0',\n  flexDirection: 'column',\n  width: '100%',\n  height: '100%',\n  contain: 'layout size style'\n};\nvar tabsInner = {\n  position: 'relative',\n  flex: 1,\n  contain: 'layout size style'\n};\n\nvar IonTabs =\n/*#__PURE__*/\nfunction (_React$Component8) {\n  _inherits(IonTabs, _React$Component8);\n\n  function IonTabs(props) {\n    var _this8;\n\n    _classCallCheck(this, IonTabs);\n\n    _this8 = _possibleConstructorReturn(this, _getPrototypeOf(IonTabs).call(this, props));\n    _this8.routerOutletRef = React.createRef();\n    return _this8;\n  }\n\n  _createClass(IonTabs, [{\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      var outlet;\n      var tabBar;\n      React.Children.forEach(this.props.children, function (child) {\n        if (child == null || typeof child !== 'object' || !child.hasOwnProperty('type')) {\n          return;\n        }\n\n        if (child.type === IonRouterOutlet) {\n          outlet = child;\n        }\n\n        if (child.type === IonTabBar) {\n          var _this9$props = _this9.props,\n              onIonTabsDidChange = _this9$props.onIonTabsDidChange,\n              onIonTabsWillChange = _this9$props.onIonTabsWillChange;\n          tabBar = React.cloneElement(child, {\n            onIonTabsDidChange: onIonTabsDidChange,\n            onIonTabsWillChange: onIonTabsWillChange\n          });\n        }\n      });\n\n      if (!outlet) {\n        throw new Error('IonTabs must contain an IonRouterOutlet');\n      }\n\n      if (!tabBar) {\n        // TODO, this is not required\n        throw new Error('IonTabs needs a IonTabBar');\n      }\n\n      return React.createElement(\"div\", {\n        style: hostStyles\n      }, tabBar.props.slot === 'top' ? tabBar : null, React.createElement(\"div\", {\n        style: tabsInner,\n        className: \"tabs-inner\"\n      }, outlet), tabBar.props.slot === 'bottom' ? tabBar : null);\n    }\n  }], [{\n    key: \"contextType\",\n    get: function get() {\n      return NavContext;\n    }\n  }]);\n\n  return IonTabs;\n}(React.Component);\n\nvar IonBackButton =\n/*@__PURE__*/\nfunction () {\n  return (\n    /*#__PURE__*/\n    function (_React$Component9) {\n      _inherits(_class5, _React$Component9);\n\n      function _class5() {\n        var _this10;\n\n        _classCallCheck(this, _class5);\n\n        _this10 = _possibleConstructorReturn(this, _getPrototypeOf(_class5).apply(this, arguments));\n\n        _this10.clickButton = function (e) {\n          var defaultHref = _this10.props.defaultHref;\n\n          if (_this10.context.hasIonicRouter()) {\n            e.stopPropagation();\n\n            _this10.context.goBack(defaultHref);\n          } else if (defaultHref !== undefined) {\n            window.location.href = defaultHref;\n          }\n        };\n\n        return _this10;\n      }\n\n      _createClass(_class5, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(IonBackButtonInner, Object.assign({\n            onClick: this.clickButton\n          }, this.props));\n        }\n      }], [{\n        key: \"displayName\",\n        get: function get() {\n          return 'IonBackButton';\n        }\n      }, {\n        key: \"contextType\",\n        get: function get() {\n          return NavContext;\n        }\n      }]);\n\n      return _class5;\n    }(React.Component)\n  );\n}(); // Icons that are used by internal components\n\n\naddIcons({\n  'ios-close': close.ios,\n  'md-close': close.md,\n  'ios-reorder': reorder.ios,\n  'md-reorder': reorder.md,\n  'ios-menu': menu.ios,\n  'md-menu': menu.md,\n  'ios-arrow-forward': arrowForward.ios,\n  'md-arrow-forward': arrowForward.md,\n  'ios-arrow-back': arrowBack.ios,\n  'md-arrow-back': arrowBack.md,\n  'ios-arrow-down': arrowDown.ios,\n  'md-arrow-down': arrowDown.md,\n  'ios-search': search.ios,\n  'md-search': search.md,\n  'ios-close-circle': closeCircle.ios,\n  'md-close-circle': closeCircle.md\n}); // TODO: defineCustomElements() is asyncronous\n// We need to use the promise\n\ndefineCustomElements(window);\nexport { DefaultIonLifeCycleContext, IonActionSheet, IonAlert, IonApp, IonAvatar, IonBackButton, IonBackdrop, IonBadge, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCardTitle, IonCheckbox, IonChip, IonCol, IonContent, IonDatetime, IonFab, IonFabButton, IonFabList, IonFooter, IonGrid, IonHeader, IonIcon, IonImg, IonInfiniteScroll, IonInfiniteScrollContent, IonInput, IonItem, IonItemDivider, IonItemGroup, IonItemOption, IonItemOptions, IonItemSliding, IonLabel, IonLifeCycleContext, IonList, IonListHeader, IonLoading, IonMenu, IonMenuButton, IonMenuToggle, IonModal, IonNav, IonNote, IonPage, IonPicker, IonPickerColumn, IonPopover, IonProgressBar, IonRadio, IonRadioGroup, IonRange, IonRefresher, IonRefresherContent, IonReorder, IonReorderGroup, IonRippleEffect, IonRouterLink, IonRouterOutlet, IonRow, IonSearchbar, IonSegment, IonSegmentButton, IonSelect, IonSelectOption, IonSelectPopover, IonSkeletonText, IonSlide, IonSlides, IonSpinner, IonSplitPane, IonTab, IonTabBar, IonTabButton, IonTabs, IonText, IonTextarea, IonThumbnail, IonTitle, IonToast, IonToggle, IonToolbar, IonVirtualScroll, NavContext, getPlatforms, isPlatform, useIonViewDidEnter, useIonViewDidLeave, useIonViewWillEnter, useIonViewWillLeave, withIonLifeCycle };","map":null,"metadata":{},"sourceType":"module"}